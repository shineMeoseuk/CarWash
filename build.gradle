plugins {
	id 'org.springframework.boot' version '2.7.9'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id 'groovy'
}

group = 'kr.co.CarWash'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.session:spring-session-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'com.github.pagehelper:pagehelper-spring-boot-starter:1.4.1'

	//mysql 추가
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.26'
	runtimeOnly 'com.mysql:mysql-connector-j'

	//jdbc 추가 ( db 연동시 필요)
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	//lombok 추가
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//mybatis 추가
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.2.0'
	testImplementation 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	//Validation Starter
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//Bcrypt (패스워드 암호화)
	implementation 'org.mindrot:jbcrypt:0.4'

	//AspectJ
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	//google authenticator 라이브러리 추가
	implementation 'com.warrenstrange:googleauth:1.5.0'
	//email
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'javax.mail:javax.mail-api:1.6.2'
	//final 추가 가능
	testImplementation 'org.mockito:mockito-inline:3.12.4'
	//time()추가
	testImplementation 'org.mockito:mockito-core:3.12.4'
}

test {
	useJUnitPlatform()
}

processResources {
	duplicatesStrategy = 'INCLUDE' // 중복 파일을 포함하도록 설정
}

processResources.dependsOn('copySecretMain')

tasks.register('copySecretMain', Copy) {
	from './secure-submodule' // 서브모듈 디렉토리 경로
	include "application*.yml"  // 복사할 파일들
	into 'src/main/resources'  // main 소스 세트에 복사 위치
}

processTestResources.dependsOn('copySecretTest')

tasks.register('copySecretTest', Copy) {
	from './secure-submodule' // 서브모듈 디렉토리 경로
	include "application*.yml"  // 복사할 파일들
	into 'src/test/resources'  // test 소스 세트에 복사 위치
}


//sourceSets {
//	main {
//		resources {
//			srcDirs "src/main/resources"
//			include "**/*"
//		}
//	}
//}